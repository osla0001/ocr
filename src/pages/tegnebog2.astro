---
import Layout from "../layouts/Layout.astro";
import cards from "../database/cards.jsx";
import IdCard from "../components/IdCard.astro";
import IdCardMap from "../components/IdCardMap.astro";
---

<Layout>
  <section>
    <div id="tegnebog" class="middle">
      <img
        class="purse purses"
        src="assets/purse1.png"
        alt=""
        style="z-index: 1;"
      />
      <IdCard
        profil="assets/profil.png"
        nummer="0001"
        fornavn="Oscar"
        efternavn="Laursen"
        bydel_by="Amager, København"
        fodselsdato="15/10/2001"
        sex="M"
        hgt="187"
        eyes="Blue"
        taget="22/07/2025"
        givet="22/07/2035"
        baggrund="#F4E0E5"
        placering="(-50%, -60%)"
        z="1"
        card_id="card-1"
      />
      <img class="purses" src="assets/purse2.png" alt="" style="z-index: 2;" />
      <IdCard
        profil="assets/profil.png"
        nummer="0001"
        fornavn="Oscar"
        efternavn="Laursen"
        bydel_by="Amager, København"
        fodselsdato="15/10/2001"
        sex="M"
        hgt="187"
        eyes="Blue"
        taget="22/07/2025"
        givet="22/07/2035"
        baggrund="#f4ede0"
        placering="(-50%, -42%)"
        z="2"
        card_id="card-2"
      />
      <img class="purses" src="assets/purse3.png" alt="" style="z-index: 3;" />
      <IdCard
        profil="assets/profil.png"
        nummer="0001"
        fornavn="Oscar"
        efternavn="Laursen"
        bydel_by="Amager, København"
        fodselsdato="15/10/2001"
        sex="M"
        hgt="187"
        eyes="Blue"
        taget="22/07/2025"
        givet="22/07/2035"
        baggrund="#E3E0F4"
        placering="(-50%, -76%)"
        card_id="card-3"
      />
      <div class="display-none flex_row">
        {cards.map((card) => <IdCardMap {...card} />)}
      </div>
    </div>
  </section>
</Layout>

<script type="module">
  window.addEventListener("DOMContentLoaded", () => {
    const cards = [
      document.getElementById("card-1"),
      document.getElementById("card-2"),
      document.getElementById("card-3"),
    ];

    // HOVER-EFFEKT (som før)
    function onEnter(e) {
      const card = e.currentTarget;
      const originalTransform =
        card.dataset.originalTransform || card.style.transform;
      const match = (card.style.transform || originalTransform).match(
        /translate\(([^,]+),\s*([^)]+)\)/,
      );
      const x = match ? match[1] : "-50%";
      let y = match ? match[2] : "-50%";
      const yMatch = y.match(/(-?\d+)(%?)/);
      if (yMatch) {
        let yNum = parseInt(yMatch[1], 10);
        let yUnit = yMatch[2] || "";
        yNum += -32;
        y = `${yNum}${yUnit}`;
      }
      card.style.transform = `translate(${x}, ${y})`;
    }

    function onLeave(e) {
      const card = e.currentTarget;
      const originalTransform =
        card.dataset.originalTransform || card.style.transform;
      card.style.transform = originalTransform;
    }

    cards.forEach((card) => {
      card.dataset.originalTransform = card.style.transform;
      card.addEventListener("mouseenter", onEnter);
      card.addEventListener("mouseleave", onLeave);

      card.addEventListener(
        "click",
        function switchToGrid() {
          // 1. Skjul purse-billeder
          document.querySelectorAll(".purse, .purses").forEach((img) => {
            img.style.transform += " translate(-50%, 80%)";
            img.style.opacity = "0";
            img.style.transition = "transform 0.7s, opacity 0.7s";
            setTimeout(() => {
              img.style.display = "none";
            }, 700); // Skjul purses helt efter transition
          });

          // 2. Flyt kortene til grid-positioner (behold absolute)
          const vw = window.innerWidth;
          const yOffset = (vw / 1000) * 0; // juster evt. denne faktor
          const y = -116 - yOffset;

          cards[2].style.transform = `translate(186%, -50%)`;
          cards[0].style.transform = `translate(-50%, -50%)`;
          cards[1].style.transform = `translate(68%, -50%)`;

          cards.forEach((c) => {
            c.style.transition = "transform 0.7s";
            // Fjern hover-lyttere
            c.removeEventListener("mouseenter", onEnter);
            c.removeEventListener("mouseleave", onLeave);
          });

          // 3. Når transitionen er færdig, fade ud, skift til grid, fade ind
          setTimeout(() => {
            cards.forEach((c) => {
              c.style.transition = "opacity 0.2s";
              c.style.opacity = "0";
            });

            setTimeout(() => {
              cards.forEach((c) => {
                c.style.position = "relative";
                c.style.removeProperty("top");
                c.style.removeProperty("left");
                c.style.removeProperty("transform");
                c.style.removeProperty("z-index");
                c.classList.add("grid-mode");
                c.style.transition = "opacity 0.2s";
                c.style.opacity = "1";
              });

              const tegnebog = document.getElementById("tegnebog");
              if (tegnebog) {
                tegnebog.classList.remove("middle");
                tegnebog.classList.add("grid");
              }

              const mapSection = document.querySelector("section.display-none");
              if (mapSection) {
                mapSection.classList.remove("display-none");
                mapSection.classList.add("grid2");
              }
            }, 0); // fade ud, skift, fade ind
          }, 700); // matcher din transition-tid
        },
        { once: true },
      );
    });
  });
</script>

<style>
  .purse {
    filter: drop-shadow(0 20px 20px rgba(0, 0, 0, 0.85));
  }

  .purses {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: 35%;
    max-width: 100vw;
    max-height: 100vh;
    display: block;
    pointer-events: none;
    overflow: hidden;
  }

  /* .middle {
    height: 100vh;
    width: 100vw;
    align-items: center;
    justify-content: center;
  } */

  .grid {
    display: flex;
    flex-direction: row;
    justify-items: center;
    gap: 4.3vw;
    align-items: center;
    overflow-y: scroll;
    position: relative;
    left: 28.3vw;
    flex-shrink: inherit;
  }

  .grid2 {
    display: flex;
    flex-direction: row;
    justify-items: center;
    gap: 4.3vw;
    justify-content: center;
    position: relative;
    padding-bottom: 4.3vw;
  }

  .display-none {
    display: none;
  }

  #tegnebog {
    height: 100vh;
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
  }

  .flex_row {
    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
  }

  #tegnebog.grid {
    display: flex;
    flex-direction: row;
    flex-wrap: nowrap;
    overflow-x: auto;
    gap: 4vw;
    padding: 2vw;
    width: 200vw;
    box-sizing: border-box;
    scrollbar-width: none; /* valgfrit */
  }

  .card.grid-mode,
  .flex_row {
    position: relative !important;
    transform: none !important;
    z-index: auto !important;
    flex-shrink: 0;
  }

  .flex_row {
    flex-shrink: 0;
    width: 100vw;
  }
</style>
