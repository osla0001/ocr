---
import Layout from "../layouts/Layout.astro";
import Letter from "../components/Letter.astro";
import Hero from "../components/Hero.astro";
import Blur from "../components/Blur.astro";
import IndexNote from "../components/IndexNote.astro";
---

<Layout title="osçar's Portfolio" meta="Forsiden til min portfolio hjemmeside">
  <Hero />
  <section class="additional-content">
    <section id="presentation">
      <div class="presentation-inner">
        <img src="/assets/logo.svg" alt="" class="small_logo" />
        <h2>osçar’s Portfolio</h2>
        <p>
          Denne side er et levende arkiv over mine værker, mine færdigheder og
          de æstetiske tanker, der former min tilgang til design. Her får du et
          indblik i både det digitale håndværk, jeg har skabt ved tastaturet, og
          de projekter, der tager form uden for skærmens lys. Du finder nyttig
          viden om min baggrund, mine erfaringer og mine kreative udfoldelser.
          Tag dig tid til at bevæge dig rundt på siden, udforske de små detaljer
          og lade de interaktive elementer føre dig på opdagelse i mit arbejde.
        </p>
        <img src="/assets/paper_holes.png" alt="" class="background_image" />
      </div>
    </section>
    <IndexNote />
    <Blur />
    <Letter />
  </section>

  <!-- Snap scroll -->
  <script is:inline>
    document.addEventListener("DOMContentLoaded", () => {
      const zoomEl = document.querySelector(".zoom");
      let snapScrollActive = false;
      let firstScroll = true;
      let lastSnapTime = Date.now();

      function activateSnapScroll() {
        if (snapScrollActive) return;
        snapScrollActive = true;

        const sections = Array.from(document.querySelectorAll("section[id]"));
        let isSnapping = false;

        window.addEventListener(
          "wheel",
          (e) => {
            const now = Date.now();
            if (isSnapping || now - lastSnapTime < 1500) {
              e.preventDefault();
              return;
            }
            isSnapping = true;
            lastSnapTime = now;

            // Første scroll efter zoom: tving til #presentation
            if (firstScroll) {
              firstScroll = false;
              const presentationSection =
                document.getElementById("presentation");
              if (presentationSection) {
                presentationSection.scrollIntoView({
                  behavior: "smooth",
                  block: "start",
                });
              }
              setTimeout(() => {
                isSnapping = false;
              }, 900);
              e.preventDefault();
              return;
            }

            // Basic snap scroll: én sektion ad gangen
            let closestIdx = 0;
            let minDist = Math.abs(sections[0].getBoundingClientRect().top);

            sections.forEach((section, idx) => {
              const dist = Math.abs(section.getBoundingClientRect().top);
              if (dist < minDist) {
                minDist = dist;
                closestIdx = idx;
              }
            });

            let nextIdx = closestIdx;
            if (e.deltaY > 0 && closestIdx < sections.length - 1) {
              nextIdx = closestIdx + 1;
            } else if (e.deltaY < 0 && closestIdx > 0) {
              nextIdx = closestIdx - 1;
            }

            sections[nextIdx].scrollIntoView({
              behavior: "smooth",
              block: "start",
            });

            setTimeout(() => {
              isSnapping = false;
            }, 900);

            e.preventDefault();
          },
          { passive: false },
        );
      }

      // Aktiver snap scroll når zoom-animationen er færdig
      zoomEl.addEventListener("transitionend", (event) => {
        if (
          event.propertyName === "width" ||
          event.propertyName === "height" ||
          event.propertyName === "transform"
        ) {
          activateSnapScroll();
        }
      });
    });
  </script>

  <style>
    html,
    body {
      height: 100%;
      overflow-x: hidden;
    }

    main {
      scroll-snap-type: y mandatory;
      overflow-y: scroll;
      height: 100vh;
    }

    section {
      scroll-snap-align: start;
      height: 100vh;
    }

    /* Hero sektion */
    .screen {
      position: relative;
      width: 100vw;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
      overflow: hidden;
    }

    .content-container {
      position: relative;
      width: 100%;
      height: 100%;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .whiteboard {
      position: absolute;
      left: 50%;
      top: 50%;
      width: 110%;
      height: auto;
      transform: translate(-50%, -50%);
      object-fit: contain;
      z-index: 1;
      margin-top: 26%;
      user-select: none;
      overflow-x: hidden;
    }

    .zoom {
      position: absolute;
      left: 50%;
      top: 38%;
      transform: translate(-50%, -50%);
      width: 54vh; /* Fylder containeren */
      height: 36vh;
      z-index: 10;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .zoom.zoomed {
      width: 100vw !important;
      height: 100vh !important;
      left: 50% !important;
      top: 50% !important;
      transform: translate(-50%, -50%) !important;
      border-radius: 0 !important;
      z-index: 100;
    }

    .zoom.zoomed .content-container {
      transform: none;
      transition: none;
    }

    .zoom.zoomed .text {
      transform: translate(-50%, -50%) scale(2.2);
      transition: transform 1.5s;
    }

    .text {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      font-family: "helveticaultra_compressed";
      font-size: 230%;
      color: rgb(0, 0, 0);
      text-align: center;
      line-height: 1;
      text-transform: uppercase;
      margin: 0;
      padding: 0;
      z-index: 2;
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
    }

    .text h1,
    .text h2 {
      margin: 0;
      padding: 0;
      font-weight: normal; /* Eller den vægt du ønsker */
    }

    .text h1 {
      margin-bottom: 0; /* Kun en smule afstand mellem h1 og h2 */
    }

    .text h2 {
      font-weight: lighter; /* Gør undertitlen lettere */
      font-size: 0.8em; /* Gør undertitlen mindre */
    }

    /* Efter zoom-effekt */
    .additional-content {
      opacity: 1;
      pointer-events: none;
      transition: opacity 0.1s;
      display: block; /* VIGTIGT: ikke 'none' */
      visibility: hidden; /* valgfrit, men ikke nødvendigt for AOS */
      /* Styling: */
      max-width: 70ch;
      margin: 50px auto 50px auto;
      width: 100%;
    }

    h2 {
      font-family: roundhand-regular, sans-serif;
      font-size: calc(3.5cqw * var(--font-scale));
      font-weight: 300;
      margin-bottom: 20px;
      text-align: center;
      margin-bottom: 1px;
    }

    /* Præsentationssektion */
    #presentation {
      position: relative;
      width: 100%;
      height: 100vh;
      display: flex;
      justify-content: center;
      align-items: center;
    }

    .presentation-inner {
      max-width: 70ch;
      margin: 0 auto;
      width: 100%;
      position: relative;
      z-index: 1;
      text-align: justify;
    }

    .background_image {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 115%;
      height: auto;
      z-index: -1;
      user-select: none;
      object-fit: fill;
      box-shadow: 10px 10px 5px 0px rgba(0, 0, 0, 0.24);
    }

    .small_logo {
      display: block;
      margin: 0 auto;
      width: 6vw;
      height: auto;
    }

    .presentation p {
      text-align: justify;
    }
  </style>
</Layout>
