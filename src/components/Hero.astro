<section class="screen" id="hero_section">
  <div class="zoom">
    <div class="content-container">
      <img src="/assets/whiteboard_white.svg" alt="" class="whiteboard" />
      <div class="text">
        <h1>Portfolio</h1>
      </div>
    </div>
  </div>
</section>

<!-- Zoom effect -->
<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const ZOOM_KEY = "zoomTimestamp";
    const FIVE_MINUTES = 3 * 60 * 1000;
    const now = Date.now();

    const isMobile = window.innerWidth <= 768;
    console.log("Device type:", isMobile ? "Mobile" : "Desktop");

    let zoomed = false;
    const zoomEl = document.querySelector(".zoom");
    const screenEl = document.querySelector(".screen");
    const additionalContent = document.querySelector(".additional-content");

    zoomEl.style.transition = "all 1.5s";

    // Tjek om zoom skal springes over
    const lastZoom = localStorage.getItem(ZOOM_KEY);
    if (lastZoom && now - Number(lastZoom) < FIVE_MINUTES) {
      // Spring zoom-animationen over med rigtig klasse
      const zoomClass = isMobile ? "zoomed-mobile" : "zoomed-desktop";
      zoomEl.classList.add(zoomClass);
      zoomed = true;
      document.body.style.overflow = "visible";
      document.documentElement.style.overflow = "visible";
      screenEl.style.overflow = "visible";
      screenEl.style.overflowX = "hidden";
      document.querySelector(".whiteboard").style.display = "none";
      additionalContent.style.opacity = "1";
      additionalContent.style.pointerEvents = "auto";
      additionalContent.style.visibility = "visible";
      // Fjern transition p√• .text, s√• den ikke animerer
      document.querySelector(".text").style.transition = "none";
      document.querySelector(".text").style.transform =
        "translate(-50%, -50%) scale(2.2)";
      if (window.AOS) AOS.refresh();
      return;
    }

    // Ellers k√∏r zoom-animationen som normalt
    window.scrollTo({ top: 0, behavior: "auto" });
    document.body.style.overflow = "hidden";
    document.documentElement.style.overflow = "hidden";

    function triggerZoom() {
      if (!zoomed) {
        console.log("üöÄ Zoom triggered!");
        // Brug forskellige klasser for desktop og mobil
        const zoomClass = isMobile ? "zoomed-mobile" : "zoomed-desktop";
        zoomEl.classList.add(zoomClass);
        zoomed = true;
      }
    }

    // Desktop: Wheel events
    window.addEventListener("wheel", (e) => {
      if (e.deltaY > 0) {
        triggerZoom();
      }
    });

    // Mobile: Touch events
    let startY = null;

    window.addEventListener("touchstart", (e) => {
      startY = e.touches[0].clientY;
      console.log("üì± Touch start");
    });

    window.addEventListener("touchmove", (e) => {
      if (startY && !zoomed) {
        const currentY = e.touches[0].clientY;
        const deltaY = startY - currentY;
        console.log("üì± Touch move, deltaY:", deltaY);

        if (deltaY > 50) {
          // Swipe up 50px
          console.log("üì± Swipe up detected!");
          triggerZoom();
          startY = null;
        }
      }
    });

    window.addEventListener("touchend", () => {
      startY = null;
    });

    zoomEl.addEventListener("transitionend", (event) => {
      if (
        zoomed &&
        (event.propertyName === "width" ||
          event.propertyName === "height" ||
          event.propertyName === "transform")
      ) {
        document.body.style.overflow = "visible";
        document.documentElement.style.overflow = "visible";
        screenEl.style.overflow = "visible";
        screenEl.style.overflowX = "hidden";
        document.querySelector(".whiteboard").style.display = "none";
        localStorage.setItem(ZOOM_KEY, Date.now());
        setTimeout(() => {
          additionalContent.style.pointerEvents = "auto";
          additionalContent.style.visibility = "visible";
          if (window.AOS) AOS.refresh();
        }, 100);
      }
    });
  });
</script>

<script is:inline>
  document.addEventListener("DOMContentLoaded", () => {
    const zoomEl = document.querySelector(".zoom");
    const isMobile = window.innerWidth <= 768;

    // Kun k√∏r p√• mobile
    if (!isMobile) return;

    // Custom event listener der lytter til n√•r dit f√∏rste script er f√¶rdigt
    function checkForMobileZoomComplete() {
      // Tjek om elementet har zoomed-mobile klasse og overflow er blevet synlig
      if (
        zoomEl.classList.contains("zoomed-mobile") &&
        document.body.style.overflow === "visible"
      ) {
        console.log("üì± Mobile zoom komplet detekteret, starter height fix...");

        // Vent 0.1 sekunder efter dit script er f√¶rdigt
        setTimeout(() => {
          console.log("üì± √Ündrer mobile height til 100vh");

          // Fjern transition for at undg√• animation
          zoomEl.style.transition = "none";

          // √Ündre height til 100vh
          zoomEl.style.height = "100vh";

          console.log("üì± Mobile height fix komplet");
        }, 100); // 0.1 sekunder delay

        return true; // Stop polling
      }
      return false; // Forts√¶t polling
    }

    // Poll hver 50ms for at tjekke om dit script er f√¶rdigt
    const pollInterval = setInterval(() => {
      if (checkForMobileZoomComplete()) {
        clearInterval(pollInterval);
      }
    }, 50);

    // Stop polling efter 5 sekunder som backup
    setTimeout(() => {
      clearInterval(pollInterval);
    }, 5000);
  });
</script>

<style>
  .screen {
    position: relative;
    width: 100vw;
    height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    overflow: hidden;
  }

  .content-container {
    position: relative;
    width: 100%;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  .whiteboard {
    position: absolute;
    left: 50%;
    top: 50%;
    width: 110%;
    height: auto;
    transform: translate(-50%, -50%);
    object-fit: contain;
    z-index: 1;
    margin-top: 26%;
    user-select: none;
    overflow-x: hidden;
  }

  .zoom {
    position: absolute;
    left: 50%;
    top: 38%;
    transform: translate(-50%, -50%);
    width: 54vh;
    height: 36vh;
    z-index: 10;
    display: flex;
    justify-content: center;
    align-items: center;
  }

  /* Desktop zoom - u√¶ndret */
  .zoom.zoomed-desktop {
    width: 100vw !important;
    height: 100vh !important;
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
    border-radius: 0 !important;
    z-index: 100;
    justify-content: center;
    place-content: center;
  }

  /* Safari-fix for mobile zoom */
  .zoom.zoomed-mobile {
    width: 275vh !important;
    height: 750vh;
    left: 50% !important;
    top: 50% !important;
    transform: translate(-50%, -50%) !important;
    border-radius: 0 !important;
    z-index: 100;
  }

  /* Safari-specifik fix for content container */
  @supports (-webkit-appearance: none) {
    /* Dette g√¶lder kun Safari */
    .zoom.zoomed-mobile .content-container {
      position: absolute !important;
      left: 50% !important;
      top: 50% !important;
      transform: translate(-50%, -50%) !important;
      display: block !important; /* Deaktiver flexbox i Safari */
    }

    .zoom.zoomed-mobile .text {
      position: absolute !important;
      left: 50% !important;
      top: 50% !important;
      transform: translate(-50%, -50%) scale(2.2) !important;
      display: block !important; /* Deaktiver flexbox i Safari */
    }
  }

  .zoom.zoomed-desktop .content-container,
  .zoom.zoomed-mobile .content-container {
    transform: none;
    transition: none;
  }

  .zoom.zoomed-desktop .text,
  .zoom.zoomed-mobile .text {
    transform: translate(-50%, -50%) scale(2.2);
    transition: transform 1.5s;
  }

  .text {
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    width: fit-content;
    font-family: "helveticaultra_compressed";
    font-size: 230%;
    color: rgb(0, 0, 0);
    text-align: center;
    line-height: 1;
    text-transform: uppercase;
    margin: 0;
    padding: 0;
    z-index: 2;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
  }

  @media (max-width: 800px) {
    .text {
      font-size: 150%;
    }

    .whiteboard {
      width: 70%;
      margin-top: 18%;
    }
  }

  .text h1,
  .text h2 {
    margin: 0;
    padding: 0;
    font-weight: normal;
  }

  .text h1 {
    margin-bottom: 0;
  }

  .text h2 {
    font-weight: lighter;
    font-size: 0.8em;
  }
</style>
